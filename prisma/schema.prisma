/////////////////////////////
// GENERATOR + DATASOURCE  //
/////////////////////////////

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/////////////////////////////
//        MODELOS          //
/////////////////////////////

model User {
  id            Int       @id @default(autoincrement())
  name          String?   @db.VarChar(50)
  email         String    @unique @db.VarChar(100)
  emailVerified DateTime?
  image         String?
  passwordHash  String    @db.VarChar(255)

  accounts Account[]
  sessions Session[]
  products Product[]
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  description String?  @db.Text
  price       Decimal  @db.Decimal(10, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId Int?
  user   User? @relation(fields: [userId], references: [id])
}
